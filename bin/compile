#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

mktmpdir() {
  dir=$(mktemp -t mono-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

# config
MONO_VERSION="3.10.0"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

# s3 packages
MONO_PACKAGE="http://s3.amazonaws.com/mono-dependencies/cedar/mono-${MONO_VERSION}.tar.gz"

# vendor directories
VENDORED_MONO="$(mktmpdir mono)"

# download and unpack packages
echo "-----> Fetching Mono binaries"
mkdir -p $VENDORED_MONO  && curl $MONO_PACKAGE -s -o -  | tar xzf - -C $VENDORED_MONO

# vendor node into the slug       
PATH="$BUILD_DIR/bin:$PATH"
echo "-----> Vendoring mono $MONO_VERSION"
mkdir -p "$BUILD_DIR/mono-build"
mkdir -p "$BUILD_DIR/mono-build/bin/"
cp -r "$VENDORED_MONO/mono/bin/" "$BUILD_DIR/mono-build/"
mkdir -p "$BUILD_DIR/mono-build/mono/"
cp -r "$VENDORED_MONO/mono/mono/" "$BUILD_DIR/mono-build/"
mkdir -p "$BUILD_DIR/mono-build/include/"
cp -r "$VENDORED_MONO/mono/include/" "$BUILD_DIR/mono-build/"
mkdir -p "$BUILD_DIR/mono-build/lib/"
cp -r "$VENDORED_MONO/mono/lib/" "$BUILD_DIR/mono-build/"
mkdir -p "$BUILD_DIR/mono-build/share/"
cp -r "$VENDORED_MONO/mono/share/" "$BUILD_DIR/mono-build/"

# setting up paths for building
MONO_PATH="$VENDORED_MONO/mono/lib/mono/4.0:$VENDORED_MONO/mono/lib/mono/3.5:$VENDORED_MONO/mono/lib/mono/4.5:$VENDORED_MONO/mono/lib/mono/2.0:."
PATH="$BUILD_DIR/mono-build/bin:$VENDORED_MONO/mono/bin:$PATH"
INCLUDE_PATH="$BUILD_DIR/mono-build/include"
export CPATH="$INCLUDE_PATH"     
export CPPPATH="$INCLUDE_PATH"
ln -s /$BUILD_DIR/mono-build /app/mono

#build app
SLN=$(ls $BUILD_DIR/*.sln | head -1)
BUILDCMD="$VENDORED_MONO/mono/bin/mono $VENDORED_MONO/mono/lib/mono/4.5/xbuild.exe $SLN"
echo "-----> building via $BUILDCMD"
eval $BUILDCMD

